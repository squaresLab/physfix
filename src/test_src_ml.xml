<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="dump_to_ast_test/test_19.cpp" pos:tabs="8"><comment type="line" pos:start="1:1" pos:end="1:63">//  ///////////////////////////////////////////////////////////</comment>
<comment type="line" pos:start="2:1" pos:end="2:2">//</comment>
<comment type="line" pos:start="3:1" pos:end="3:29">// turtlebot_example_node.cpp</comment>
<comment type="line" pos:start="4:1" pos:end="4:60">// This file contains example code for use with ME 597 lab 1</comment>
<comment type="line" pos:start="5:1" pos:end="5:61">// It outlines the basic setup of a ros node and the various </comment>
<comment type="line" pos:start="6:1" pos:end="6:22">// inputs and outputs.</comment>
<comment type="line" pos:start="7:1" pos:end="7:3">// </comment>
<comment type="line" pos:start="8:1" pos:end="8:30">// Author: James Servos. 2012 </comment>
<comment type="line" pos:start="9:1" pos:end="9:2">//</comment>
<comment type="line" pos:start="10:1" pos:end="10:61">// //////////////////////////////////////////////////////////</comment>

<cpp:include pos:start="12:1" pos:end="12:20">#<cpp:directive pos:start="12:2" pos:end="12:8">include</cpp:directive> <cpp:file pos:start="12:10" pos:end="12:20">&lt;ros/ros.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="13:1" pos:end="13:52">#<cpp:directive pos:start="13:2" pos:end="13:8">include</cpp:directive> <cpp:file pos:start="13:10" pos:end="13:52">&lt;geometry_msgs/PoseWithCovarianceStamped.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="14:1" pos:end="14:32">#<cpp:directive pos:start="14:2" pos:end="14:8">include</cpp:directive> <cpp:file pos:start="14:10" pos:end="14:32">&lt;geometry_msgs/Twist.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="15:1" pos:end="15:35">#<cpp:directive pos:start="15:2" pos:end="15:8">include</cpp:directive> <cpp:file pos:start="15:10" pos:end="15:35">&lt;tf/transform_datatypes.h&gt;</cpp:file></cpp:include>


<decl_stmt pos:start="18:1" pos:end="18:13"><decl pos:start="18:1" pos:end="18:12"><type pos:start="18:1" pos:end="18:6"><name pos:start="18:1" pos:end="18:6">double</name></type> <name pos:start="18:8" pos:end="18:8">X</name><init pos:start="18:9" pos:end="18:12">=<expr pos:start="18:10" pos:end="18:12"><literal type="number" pos:start="18:10" pos:end="18:12">0.0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="20:1" pos:end="20:13"><decl pos:start="20:1" pos:end="20:12"><type pos:start="20:1" pos:end="20:6"><name pos:start="20:1" pos:end="20:6">double</name></type> <name pos:start="20:8" pos:end="20:8">Y</name><init pos:start="20:9" pos:end="20:12">=<expr pos:start="20:10" pos:end="20:12"><literal type="number" pos:start="20:10" pos:end="20:12">0.0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="21:1" pos:end="21:23"><decl pos:start="21:1" pos:end="21:22"><type pos:start="21:1" pos:end="21:6"><name pos:start="21:1" pos:end="21:6">double</name></type> <name pos:start="21:8" pos:end="21:18">yaw_degrees</name><init pos:start="21:19" pos:end="21:22">=<expr pos:start="21:20" pos:end="21:22"><literal type="number" pos:start="21:20" pos:end="21:22">0.0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="22:1" pos:end="22:12"><decl pos:start="22:1" pos:end="22:11"><type pos:start="22:1" pos:end="22:3"><name pos:start="22:1" pos:end="22:3">int</name></type> <name pos:start="22:5" pos:end="22:9">state</name><init pos:start="22:10" pos:end="22:11">=<expr pos:start="22:11" pos:end="22:11"><literal type="number" pos:start="22:11" pos:end="22:11">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="23:1" pos:end="23:49"><decl pos:start="23:1" pos:end="23:16"><type pos:start="23:1" pos:end="23:6"><name pos:start="23:1" pos:end="23:6">double</name></type> <name pos:start="23:8" pos:end="23:12">err_x</name><init pos:start="23:13" pos:end="23:16">=<expr pos:start="23:14" pos:end="23:16"><literal type="number" pos:start="23:14" pos:end="23:16">0.0</literal></expr></init></decl>,<decl pos:start="23:18" pos:end="23:26"><type ref="prev" pos:start="23:1" pos:end="23:6"/><name pos:start="23:18" pos:end="23:22">err_y</name><init pos:start="23:23" pos:end="23:26">=<expr pos:start="23:24" pos:end="23:26"><literal type="number" pos:start="23:24" pos:end="23:26">0.0</literal></expr></init></decl>,<decl pos:start="23:28" pos:end="23:36"><type ref="prev" pos:start="23:1" pos:end="23:6"/><name pos:start="23:28" pos:end="23:32">err_d</name><init pos:start="23:33" pos:end="23:36">=<expr pos:start="23:34" pos:end="23:36"><literal type="number" pos:start="23:34" pos:end="23:36">0.0</literal></expr></init></decl>,<decl pos:start="23:38" pos:end="23:48"><type ref="prev" pos:start="23:1" pos:end="23:6"/><name pos:start="23:38" pos:end="23:44">err_yaw</name><init pos:start="23:45" pos:end="23:48">=<expr pos:start="23:46" pos:end="23:48"><literal type="number" pos:start="23:46" pos:end="23:48">0.0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="24:1" pos:end="24:37"><decl pos:start="24:1" pos:end="24:16"><type pos:start="24:1" pos:end="24:6"><name pos:start="24:1" pos:end="24:6">double</name></type> <name pos:start="24:8" pos:end="24:12">vel_x</name><init pos:start="24:13" pos:end="24:16">=<expr pos:start="24:14" pos:end="24:16"><literal type="number" pos:start="24:14" pos:end="24:16">0.0</literal></expr></init></decl>,<decl pos:start="24:18" pos:end="24:26"><type ref="prev" pos:start="24:1" pos:end="24:6"/><name pos:start="24:18" pos:end="24:22">vel_y</name><init pos:start="24:23" pos:end="24:26">=<expr pos:start="24:24" pos:end="24:26"><literal type="number" pos:start="24:24" pos:end="24:26">0.0</literal></expr></init></decl>,<decl pos:start="24:28" pos:end="24:36"><type ref="prev" pos:start="24:1" pos:end="24:6"/><name pos:start="24:28" pos:end="24:32">ang_z</name><init pos:start="24:33" pos:end="24:36">=<expr pos:start="24:34" pos:end="24:36"><literal type="number" pos:start="24:34" pos:end="24:36">0.0</literal></expr></init></decl>;</decl_stmt>

<function pos:start="26:1" pos:end="47:1"><type pos:start="26:1" pos:end="26:4"><name pos:start="26:1" pos:end="26:4">void</name></type> <name pos:start="26:6" pos:end="26:11">goal_d</name><parameter_list pos:start="26:12" pos:end="26:44">(<parameter pos:start="26:13" pos:end="26:22"><decl pos:start="26:13" pos:end="26:22"><type pos:start="26:13" pos:end="26:22"><name pos:start="26:13" pos:end="26:18">double</name></type> <name pos:start="26:20" pos:end="26:22">x_t</name></decl></parameter>,<parameter pos:start="26:24" pos:end="26:33"><decl pos:start="26:24" pos:end="26:33"><type pos:start="26:24" pos:end="26:33"><name pos:start="26:24" pos:end="26:29">double</name></type> <name pos:start="26:31" pos:end="26:33">y_t</name></decl></parameter>, <parameter pos:start="26:36" pos:end="26:43"><decl pos:start="26:36" pos:end="26:43"><type pos:start="26:36" pos:end="26:43"><name pos:start="26:36" pos:end="26:41">double</name></type> <name pos:start="26:43" pos:end="26:43">t</name></decl></parameter>)</parameter_list>
<block pos:start="27:1" pos:end="47:1">{<block_content pos:start="29:9" pos:end="45:9">
	
	<expr_stmt pos:start="29:9" pos:end="29:20"><expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:13">err_x</name><operator pos:start="29:14" pos:end="29:14">=</operator><name pos:start="29:15" pos:end="29:17">x_t</name><operator pos:start="29:18" pos:end="29:18">-</operator><name pos:start="29:19" pos:end="29:19">X</name></expr>;</expr_stmt>
	<expr_stmt pos:start="30:9" pos:end="30:20"><expr pos:start="30:9" pos:end="30:19"><name pos:start="30:9" pos:end="30:13">err_y</name><operator pos:start="30:14" pos:end="30:14">=</operator><name pos:start="30:15" pos:end="30:17">y_t</name><operator pos:start="30:18" pos:end="30:18">-</operator><name pos:start="30:19" pos:end="30:19">Y</name></expr>;</expr_stmt>
	<expr_stmt pos:start="31:9" pos:end="32:24"><expr pos:start="31:9" pos:end="32:23"><name pos:start="31:9" pos:end="31:13">err_d</name><operator pos:start="31:14" pos:end="31:14">=</operator><call pos:start="31:15" pos:end="32:23"><name pos:start="31:15" pos:end="31:18">sqrt</name><argument_list pos:start="31:19" pos:end="32:23">(<argument pos:start="31:20" pos:end="32:22"><expr pos:start="31:20" pos:end="32:22"><name pos:start="31:20" pos:end="31:24">err_x</name><operator pos:start="31:25" pos:end="31:25">*</operator><name pos:start="31:26" pos:end="31:30">err_x</name><operator pos:start="31:31" pos:end="31:31">+</operator>
	<call pos:start="32:9" pos:end="32:22"><name pos:start="32:9" pos:end="32:12">mult</name><argument_list pos:start="32:13" pos:end="32:22">(<argument pos:start="32:14" pos:end="32:18"><expr pos:start="32:14" pos:end="32:18"><name pos:start="32:14" pos:end="32:18">err_x</name></expr></argument>, <argument pos:start="32:21" pos:end="32:21"><expr pos:start="32:21" pos:end="32:21"><literal type="number" pos:start="32:21" pos:end="32:21">5</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:15">err_yaw</name><operator pos:start="33:16" pos:end="33:16">=</operator><name pos:start="33:17" pos:end="33:17">t</name><operator pos:start="33:18" pos:end="33:18">-</operator><name pos:start="33:19" pos:end="33:29">yaw_degrees</name></expr>;</expr_stmt>
	<comment type="line" pos:start="34:9" pos:end="34:43">//if(err_yaw&lt;0)err_yaw=err_yaw+360;</comment>
	
	<if_stmt pos:start="36:9" pos:end="45:9"><if pos:start="36:9" pos:end="37:30">if<condition pos:start="36:11" pos:end="36:32">(<expr pos:start="36:12" pos:end="36:31"><name pos:start="36:12" pos:end="36:16">err_x</name><operator pos:start="36:17" pos:end="36:17">&gt;</operator><literal type="number" pos:start="36:18" pos:end="36:20">0.1</literal><operator pos:start="36:21" pos:end="36:22">||</operator><name pos:start="36:23" pos:end="36:27">err_y</name><operator pos:start="36:28" pos:end="36:28">&gt;</operator><literal type="number" pos:start="36:29" pos:end="36:31">0.1</literal></expr>)</condition>
	<block pos:start="37:9" pos:end="37:30">{<block_content pos:start="37:10" pos:end="37:29"><expr_stmt pos:start="37:10" pos:end="37:19"><expr pos:start="37:10" pos:end="37:18"><name pos:start="37:10" pos:end="37:14">vel_x</name><operator pos:start="37:15" pos:end="37:15">=</operator><literal type="number" pos:start="37:16" pos:end="37:18">0.3</literal></expr>;</expr_stmt><expr_stmt pos:start="37:20" pos:end="37:29"><expr pos:start="37:20" pos:end="37:28"><name pos:start="37:20" pos:end="37:24">ang_z</name><operator pos:start="37:25" pos:end="37:25">=</operator><literal type="number" pos:start="37:26" pos:end="37:28">0.0</literal></expr>;</expr_stmt></block_content>}</block></if><comment type="line" pos:start="37:31" pos:end="37:59">//ROS_INFO("1..S=%d",state);}</comment>
	<if type="elseif" pos:start="38:9" pos:end="39:31">else if<condition pos:start="38:16" pos:end="38:26">(<expr pos:start="38:17" pos:end="38:25"><name pos:start="38:17" pos:end="38:23">err_yaw</name><operator pos:start="38:24" pos:end="38:24">&gt;</operator><literal type="number" pos:start="38:25" pos:end="38:25">2</literal></expr>)</condition>
	<block pos:start="39:9" pos:end="39:31">{<block_content pos:start="39:10" pos:end="39:30"><expr_stmt pos:start="39:10" pos:end="39:20"><expr pos:start="39:10" pos:end="39:19"><name pos:start="39:10" pos:end="39:14">ang_z</name><operator pos:start="39:15" pos:end="39:15">=</operator><literal type="number" pos:start="39:16" pos:end="39:19">0.15</literal></expr>;</expr_stmt><expr_stmt pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:25">vel_x</name><operator pos:start="39:26" pos:end="39:26">=</operator><literal type="number" pos:start="39:27" pos:end="39:29">0.0</literal></expr>;</expr_stmt></block_content>}</block></if><comment type="line" pos:start="39:32" pos:end="39:60">//ROS_INFO("2..S=%d",state);}</comment>
	<else pos:start="40:9" pos:end="45:9">else
	<block pos:start="41:9" pos:end="45:9">{<block_content pos:start="42:17" pos:end="44:42">
		<expr_stmt pos:start="42:17" pos:end="42:34"><expr pos:start="42:17" pos:end="42:33"><name pos:start="42:17" pos:end="42:21">state</name><operator pos:start="42:22" pos:end="42:22">=</operator><operator pos:start="42:23" pos:end="42:23">(</operator><name pos:start="42:24" pos:end="42:28">state</name><operator pos:start="42:29" pos:end="42:29">+</operator><literal type="number" pos:start="42:30" pos:end="42:30">1</literal><operator pos:start="42:31" pos:end="42:31">)</operator><operator pos:start="42:32" pos:end="42:32">%</operator><literal type="number" pos:start="42:33" pos:end="42:33">8</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="43:17" pos:end="43:26"><expr pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:21">ang_z</name><operator pos:start="43:22" pos:end="43:22">=</operator><literal type="number" pos:start="43:23" pos:end="43:25">0.0</literal></expr>;</expr_stmt><expr_stmt pos:start="43:27" pos:end="43:36"><expr pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:31">vel_x</name><operator pos:start="43:32" pos:end="43:32">=</operator><literal type="number" pos:start="43:33" pos:end="43:35">0.0</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="44:17" pos:end="44:42"><expr pos:start="44:17" pos:end="44:41"><call pos:start="44:17" pos:end="44:41"><name pos:start="44:17" pos:end="44:24">ROS_INFO</name><argument_list pos:start="44:25" pos:end="44:41">(<argument pos:start="44:26" pos:end="44:34"><expr pos:start="44:26" pos:end="44:34"><literal type="string" pos:start="44:26" pos:end="44:34">"3..S=%d"</literal></expr></argument>,<argument pos:start="44:36" pos:end="44:40"><expr pos:start="44:36" pos:end="44:40"><name pos:start="44:36" pos:end="44:40">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></else></if_stmt>
	
</block_content>}</block></function>

<function pos:start="49:1" pos:end="51:1"><type pos:start="49:1" pos:end="49:3"><name pos:start="49:1" pos:end="49:3">int</name></type> <name pos:start="49:5" pos:end="49:8">mult</name><parameter_list pos:start="49:9" pos:end="49:22">(<parameter pos:start="49:10" pos:end="49:14"><decl pos:start="49:10" pos:end="49:14"><type pos:start="49:10" pos:end="49:14"><name pos:start="49:10" pos:end="49:12">int</name></type> <name pos:start="49:14" pos:end="49:14">x</name></decl></parameter>, <parameter pos:start="49:17" pos:end="49:21"><decl pos:start="49:17" pos:end="49:21"><type pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:19">int</name></type> <name pos:start="49:21" pos:end="49:21">y</name></decl></parameter>)</parameter_list> <block pos:start="49:24" pos:end="51:1">{<block_content pos:start="50:9" pos:end="50:21">
	<return pos:start="50:9" pos:end="50:21">return <expr pos:start="50:16" pos:end="50:20"><name pos:start="50:16" pos:end="50:16">x</name> <operator pos:start="50:18" pos:end="50:18">*</operator> <name pos:start="50:20" pos:end="50:20">y</name></expr>;</return>
</block_content>}</block></function>
	
<comment type="line" pos:start="53:1" pos:end="53:43">//Callback function for the Position topic </comment>
<function pos:start="54:1" pos:end="65:1"><type pos:start="54:1" pos:end="54:4"><name pos:start="54:1" pos:end="54:4">void</name></type> <name pos:start="54:6" pos:end="54:18">pose_callback</name><parameter_list pos:start="54:19" pos:end="54:71">(<parameter pos:start="54:20" pos:end="54:70"><decl pos:start="54:20" pos:end="54:70"><type pos:start="54:20" pos:end="54:66"><specifier pos:start="54:20" pos:end="54:24">const</specifier> <name pos:start="54:26" pos:end="54:65"><name pos:start="54:26" pos:end="54:38">geometry_msgs</name><operator pos:start="54:39" pos:end="54:40">::</operator><name pos:start="54:41" pos:end="54:65">PoseWithCovarianceStamped</name></name><modifier pos:start="54:66" pos:end="54:66">&amp;</modifier></type> <name pos:start="54:68" pos:end="54:70">msg</name></decl></parameter>)</parameter_list>
<block pos:start="55:1" pos:end="65:1">{<block_content pos:start="58:9" pos:end="63:73">
	<comment type="line" pos:start="56:9" pos:end="56:69">//This function is called when a new pose message is received</comment>

	<expr_stmt pos:start="58:9" pos:end="58:37"><expr pos:start="58:9" pos:end="58:36"><name pos:start="58:9" pos:end="58:9">X</name> <operator pos:start="58:11" pos:end="58:11">=</operator> <name pos:start="58:13" pos:end="58:36"><name pos:start="58:13" pos:end="58:15">msg</name><operator pos:start="58:16" pos:end="58:16">.</operator><name pos:start="58:17" pos:end="58:20">pose</name><operator pos:start="58:21" pos:end="58:21">.</operator><name pos:start="58:22" pos:end="58:25">pose</name><operator pos:start="58:26" pos:end="58:26">.</operator><name pos:start="58:27" pos:end="58:34">position</name><operator pos:start="58:35" pos:end="58:35">.</operator><name pos:start="58:36" pos:end="58:36">x</name></name></expr>;</expr_stmt> <comment type="line" pos:start="58:39" pos:end="58:58">// Robot X psotition</comment>
	<expr_stmt pos:start="59:9" pos:end="59:37"><expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:9">Y</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <name pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:15">msg</name><operator pos:start="59:16" pos:end="59:16">.</operator><name pos:start="59:17" pos:end="59:20">pose</name><operator pos:start="59:21" pos:end="59:21">.</operator><name pos:start="59:22" pos:end="59:25">pose</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:34">position</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:36">y</name></name></expr>;</expr_stmt> <comment type="line" pos:start="59:39" pos:end="59:58">// Robot Y psotition</comment>
	<decl_stmt pos:start="60:9" pos:end="60:59"><decl pos:start="60:9" pos:end="60:58"><type pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:14">double</name></type> <name pos:start="60:16" pos:end="60:18">Yaw</name> <init pos:start="60:20" pos:end="60:58">= <expr pos:start="60:22" pos:end="60:58"><call pos:start="60:22" pos:end="60:58"><name pos:start="60:22" pos:end="60:31"><name pos:start="60:22" pos:end="60:23">tf</name><operator pos:start="60:24" pos:end="60:25">::</operator><name pos:start="60:26" pos:end="60:31">getYaw</name></name><argument_list pos:start="60:32" pos:end="60:58">(<argument pos:start="60:33" pos:end="60:57"><expr pos:start="60:33" pos:end="60:57"><name pos:start="60:33" pos:end="60:57"><name pos:start="60:33" pos:end="60:35">msg</name><operator pos:start="60:36" pos:end="60:36">.</operator><name pos:start="60:37" pos:end="60:40">pose</name><operator pos:start="60:41" pos:end="60:41">.</operator><name pos:start="60:42" pos:end="60:45">pose</name><operator pos:start="60:46" pos:end="60:46">.</operator><name pos:start="60:47" pos:end="60:57">orientation</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="60:61" pos:end="60:72">// Robot Yaw</comment>
	<expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:19">yaw_degrees</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:25">Yaw</name> <operator pos:start="61:27" pos:end="61:27">*</operator> <literal type="number" pos:start="61:29" pos:end="61:33">180.0</literal> <operator pos:start="61:35" pos:end="61:35">/</operator> <name pos:start="61:37" pos:end="61:40">M_PI</name></expr>;</expr_stmt> <comment type="line" pos:start="61:43" pos:end="61:66">// conversion to degrees</comment>
	<if_stmt pos:start="62:9" pos:end="62:51"><if pos:start="62:9" pos:end="62:51">if<condition pos:start="62:11" pos:end="62:29">( <expr pos:start="62:13" pos:end="62:27"><name pos:start="62:13" pos:end="62:23">yaw_degrees</name> <operator pos:start="62:25" pos:end="62:25">&lt;</operator> <literal type="number" pos:start="62:27" pos:end="62:27">0</literal></expr> )</condition><block type="pseudo" pos:start="62:31" pos:end="62:51"><block_content pos:start="62:31" pos:end="62:51"> <expr_stmt pos:start="62:31" pos:end="62:51"><expr pos:start="62:31" pos:end="62:50"><name pos:start="62:31" pos:end="62:41">yaw_degrees</name> <operator pos:start="62:43" pos:end="62:44">+=</operator> <literal type="number" pos:start="62:46" pos:end="62:50">360.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="62:53" pos:end="62:90">// convert negative to positive angles</comment>
	<expr_stmt pos:start="63:9" pos:end="63:73"><expr pos:start="63:9" pos:end="63:72"><call pos:start="63:9" pos:end="63:72"><name pos:start="63:9" pos:end="63:16">ROS_INFO</name><argument_list pos:start="63:17" pos:end="63:72">(<argument pos:start="63:18" pos:end="63:52"><expr pos:start="63:18" pos:end="63:52"><literal type="string" pos:start="63:18" pos:end="63:52">"pose_callback X: %f Y: %f Yaw: %f"</literal></expr></argument>, <argument pos:start="63:55" pos:end="63:55"><expr pos:start="63:55" pos:end="63:55"><name pos:start="63:55" pos:end="63:55">X</name></expr></argument>, <argument pos:start="63:58" pos:end="63:58"><expr pos:start="63:58" pos:end="63:58"><name pos:start="63:58" pos:end="63:58">Y</name></expr></argument>, <argument pos:start="63:61" pos:end="63:71"><expr pos:start="63:61" pos:end="63:71"><name pos:start="63:61" pos:end="63:71">yaw_degrees</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
</block_content>}</block></function>

<function pos:start="67:1" pos:end="112:1"><type pos:start="67:1" pos:end="67:3"><name pos:start="67:1" pos:end="67:3">int</name></type> <name pos:start="67:5" pos:end="67:8">main</name><parameter_list pos:start="67:9" pos:end="67:31">(<parameter pos:start="67:10" pos:end="67:17"><decl pos:start="67:10" pos:end="67:17"><type pos:start="67:10" pos:end="67:17"><name pos:start="67:10" pos:end="67:12">int</name></type> <name pos:start="67:14" pos:end="67:17">argc</name></decl></parameter>, <parameter pos:start="67:20" pos:end="67:30"><decl pos:start="67:20" pos:end="67:30"><type pos:start="67:20" pos:end="67:30"><name pos:start="67:20" pos:end="67:23">char</name> <modifier pos:start="67:25" pos:end="67:25">*</modifier><modifier pos:start="67:26" pos:end="67:26">*</modifier></type><name pos:start="67:27" pos:end="67:30">argv</name></decl></parameter>)</parameter_list>
<block pos:start="68:1" pos:end="112:1">{<block_content pos:start="70:9" pos:end="111:17">
	<comment type="line" pos:start="69:9" pos:end="69:38">//Initialize the ROS framework</comment>
	<expr_stmt pos:start="70:9" pos:end="70:44"><expr pos:start="70:9" pos:end="70:43"><call pos:start="70:9" pos:end="70:43"><name pos:start="70:9" pos:end="70:17"><name pos:start="70:9" pos:end="70:11">ros</name><operator pos:start="70:12" pos:end="70:13">::</operator><name pos:start="70:14" pos:end="70:17">init</name></name><argument_list pos:start="70:18" pos:end="70:43">(<argument pos:start="70:19" pos:end="70:22"><expr pos:start="70:19" pos:end="70:22"><name pos:start="70:19" pos:end="70:22">argc</name></expr></argument>,<argument pos:start="70:24" pos:end="70:27"><expr pos:start="70:24" pos:end="70:27"><name pos:start="70:24" pos:end="70:27">argv</name></expr></argument>,<argument pos:start="70:29" pos:end="70:42"><expr pos:start="70:29" pos:end="70:42"><literal type="string" pos:start="70:29" pos:end="70:42">"main_control"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt pos:start="71:9" pos:end="71:26"><decl pos:start="71:9" pos:end="71:25"><type pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:11">ros</name><operator pos:start="71:12" pos:end="71:13">::</operator><name pos:start="71:14" pos:end="71:23">NodeHandle</name></name></type> <name pos:start="71:25" pos:end="71:25">n</name></decl>;</decl_stmt>

	<comment type="line" pos:start="73:9" pos:end="73:62">//Subscribe to the desired topics and assign callbacks</comment>
	<decl_stmt pos:start="74:9" pos:end="74:79"><decl pos:start="74:9" pos:end="74:78"><type pos:start="74:9" pos:end="74:23"><name pos:start="74:9" pos:end="74:23"><name pos:start="74:9" pos:end="74:11">ros</name><operator pos:start="74:12" pos:end="74:13">::</operator><name pos:start="74:14" pos:end="74:23">Subscriber</name></name></type> <name pos:start="74:25" pos:end="74:32">pose_sub</name> <init pos:start="74:34" pos:end="74:78">= <expr pos:start="74:36" pos:end="74:78"><call pos:start="74:36" pos:end="74:78"><name pos:start="74:36" pos:end="74:46"><name pos:start="74:36" pos:end="74:36">n</name><operator pos:start="74:37" pos:end="74:37">.</operator><name pos:start="74:38" pos:end="74:46">subscribe</name></name><argument_list pos:start="74:47" pos:end="74:78">(<argument pos:start="74:48" pos:end="74:59"><expr pos:start="74:48" pos:end="74:59"><literal type="string" pos:start="74:48" pos:end="74:59">"/amcl_pose"</literal></expr></argument>, <argument pos:start="74:62" pos:end="74:62"><expr pos:start="74:62" pos:end="74:62"><literal type="number" pos:start="74:62" pos:end="74:62">1</literal></expr></argument>, <argument pos:start="74:65" pos:end="74:77"><expr pos:start="74:65" pos:end="74:77"><name pos:start="74:65" pos:end="74:77">pose_callback</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:start="76:9" pos:end="76:48">//Setup topics to Publish from this node</comment>
	<decl_stmt pos:start="77:9" pos:end="77:108"><decl pos:start="77:9" pos:end="77:107"><type pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:11">ros</name><operator pos:start="77:12" pos:end="77:13">::</operator><name pos:start="77:14" pos:end="77:22">Publisher</name></name></type> <name pos:start="77:24" pos:end="77:41">velocity_publisher</name> <init pos:start="77:43" pos:end="77:107">= <expr pos:start="77:45" pos:end="77:107"><call pos:start="77:45" pos:end="77:107"><name pos:start="77:45" pos:end="77:77"><name pos:start="77:45" pos:end="77:45">n</name><operator pos:start="77:46" pos:end="77:46">.</operator><name pos:start="77:47" pos:end="77:55">advertise</name><argument_list type="generic" pos:start="77:56" pos:end="77:77">&lt;<argument pos:start="77:57" pos:end="77:76"><expr pos:start="77:57" pos:end="77:76"><name pos:start="77:57" pos:end="77:76"><name pos:start="77:57" pos:end="77:69">geometry_msgs</name><operator pos:start="77:70" pos:end="77:71">::</operator><name pos:start="77:72" pos:end="77:76">Twist</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:start="77:78" pos:end="77:107">(<argument pos:start="77:79" pos:end="77:103"><expr pos:start="77:79" pos:end="77:103"><literal type="string" pos:start="77:79" pos:end="77:103">"/cmd_vel_mux/input/navi"</literal></expr></argument>, <argument pos:start="77:106" pos:end="77:106"><expr pos:start="77:106" pos:end="77:106"><literal type="number" pos:start="77:106" pos:end="77:106">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    
	<comment type="line" pos:start="79:9" pos:end="79:35">//Velocity control variable</comment>
	<decl_stmt pos:start="80:9" pos:end="80:33"><decl pos:start="80:9" pos:end="80:32"><type pos:start="80:9" pos:end="80:28"><name pos:start="80:9" pos:end="80:28"><name pos:start="80:9" pos:end="80:21">geometry_msgs</name><operator pos:start="80:22" pos:end="80:23">::</operator><name pos:start="80:24" pos:end="80:28">Twist</name></name></type> <name pos:start="80:30" pos:end="80:32">vel</name></decl>;</decl_stmt>

	<comment type="line" pos:start="82:9" pos:end="82:27">//Set the loop rate</comment>
	<decl_stmt pos:start="83:9" pos:end="83:32"><decl pos:start="83:9" pos:end="83:31"><type pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:17"><name pos:start="83:9" pos:end="83:11">ros</name><operator pos:start="83:12" pos:end="83:13">::</operator><name pos:start="83:14" pos:end="83:17">Rate</name></name></type> <name pos:start="83:19" pos:end="83:27">loop_rate</name><argument_list pos:start="83:28" pos:end="83:31">(<argument pos:start="83:29" pos:end="83:30"><expr pos:start="83:29" pos:end="83:30"><literal type="number" pos:start="83:29" pos:end="83:30">20</literal></expr></argument>)</argument_list></decl>;</decl_stmt>    <comment type="line" pos:start="83:37" pos:end="83:54">//20Hz update rate</comment>

	
	<while pos:start="86:9" pos:end="109:9">while <condition pos:start="86:15" pos:end="86:25">(<expr pos:start="86:16" pos:end="86:24"><call pos:start="86:16" pos:end="86:24"><name pos:start="86:16" pos:end="86:22"><name pos:start="86:16" pos:end="86:18">ros</name><operator pos:start="86:19" pos:end="86:20">::</operator><name pos:start="86:21" pos:end="86:22">ok</name></name><argument_list pos:start="86:23" pos:end="86:24">()</argument_list></call></expr>)</condition>
	<block pos:start="87:9" pos:end="109:9">{<block_content pos:start="88:17" pos:end="107:99">
		<expr_stmt pos:start="88:17" pos:end="88:34"><expr pos:start="88:17" pos:end="88:33"><call pos:start="88:17" pos:end="88:33"><name pos:start="88:17" pos:end="88:31"><name pos:start="88:17" pos:end="88:25">loop_rate</name><operator pos:start="88:26" pos:end="88:26">.</operator><name pos:start="88:27" pos:end="88:31">sleep</name></name><argument_list pos:start="88:32" pos:end="88:33">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="88:36" pos:end="88:59">//Maintain the loop rate</comment>
		<expr_stmt pos:start="89:17" pos:end="89:32"><expr pos:start="89:17" pos:end="89:31"><call pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:19">ros</name><operator pos:start="89:20" pos:end="89:21">::</operator><name pos:start="89:22" pos:end="89:29">spinOnce</name></name><argument_list pos:start="89:30" pos:end="89:31">()</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="89:36" pos:end="89:59">//Check for new messages</comment>
    
		<comment type="line" pos:start="91:17" pos:end="91:43">//Main loop code goes here:</comment>
		<switch pos:start="92:17" pos:end="101:47">switch<condition pos:start="92:23" pos:end="92:29">(<expr pos:start="92:24" pos:end="92:28"><name pos:start="92:24" pos:end="92:28">state</name></expr>)</condition><block pos:start="92:30" pos:end="101:47">{<block_content pos:start="93:17" pos:end="101:46">
		<case pos:start="93:17" pos:end="93:23">case <expr pos:start="93:22" pos:end="93:22"><literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>:</case><expr_stmt pos:start="93:24" pos:end="93:37"><expr pos:start="93:24" pos:end="93:36"><call pos:start="93:24" pos:end="93:36"><name pos:start="93:24" pos:end="93:29">goal_d</name><argument_list pos:start="93:30" pos:end="93:36">(<argument pos:start="93:31" pos:end="93:31"><expr pos:start="93:31" pos:end="93:31"><literal type="number" pos:start="93:31" pos:end="93:31">1</literal></expr></argument>,<argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr></argument>,<argument pos:start="93:35" pos:end="93:35"><expr pos:start="93:35" pos:end="93:35"><literal type="number" pos:start="93:35" pos:end="93:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="93:38" pos:end="93:43">break;</break>
		<case pos:start="94:17" pos:end="94:23">case <expr pos:start="94:22" pos:end="94:22"><literal type="number" pos:start="94:22" pos:end="94:22">1</literal></expr>:</case><expr_stmt pos:start="94:24" pos:end="94:38"><expr pos:start="94:24" pos:end="94:37"><call pos:start="94:24" pos:end="94:37"><name pos:start="94:24" pos:end="94:29">goal_d</name><argument_list pos:start="94:30" pos:end="94:37">(<argument pos:start="94:31" pos:end="94:31"><expr pos:start="94:31" pos:end="94:31"><literal type="number" pos:start="94:31" pos:end="94:31">1</literal></expr></argument>,<argument pos:start="94:33" pos:end="94:33"><expr pos:start="94:33" pos:end="94:33"><literal type="number" pos:start="94:33" pos:end="94:33">0</literal></expr></argument>,<argument pos:start="94:35" pos:end="94:36"><expr pos:start="94:35" pos:end="94:36"><literal type="number" pos:start="94:35" pos:end="94:36">90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="94:39" pos:end="94:44">break;</break>
		<case pos:start="95:17" pos:end="95:23">case <expr pos:start="95:22" pos:end="95:22"><literal type="number" pos:start="95:22" pos:end="95:22">2</literal></expr>:</case><expr_stmt pos:start="95:24" pos:end="95:38"><expr pos:start="95:24" pos:end="95:37"><call pos:start="95:24" pos:end="95:37"><name pos:start="95:24" pos:end="95:29">goal_d</name><argument_list pos:start="95:30" pos:end="95:37">(<argument pos:start="95:31" pos:end="95:31"><expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">1</literal></expr></argument>,<argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><literal type="number" pos:start="95:33" pos:end="95:33">1</literal></expr></argument>,<argument pos:start="95:35" pos:end="95:36"><expr pos:start="95:35" pos:end="95:36"><literal type="number" pos:start="95:35" pos:end="95:36">90</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="95:39" pos:end="95:44">break;</break>
		<case pos:start="96:17" pos:end="96:23">case <expr pos:start="96:22" pos:end="96:22"><literal type="number" pos:start="96:22" pos:end="96:22">3</literal></expr>:</case><expr_stmt pos:start="96:24" pos:end="96:39"><expr pos:start="96:24" pos:end="96:38"><call pos:start="96:24" pos:end="96:38"><name pos:start="96:24" pos:end="96:29">goal_d</name><argument_list pos:start="96:30" pos:end="96:38">(<argument pos:start="96:31" pos:end="96:31"><expr pos:start="96:31" pos:end="96:31"><literal type="number" pos:start="96:31" pos:end="96:31">1</literal></expr></argument>,<argument pos:start="96:33" pos:end="96:33"><expr pos:start="96:33" pos:end="96:33"><literal type="number" pos:start="96:33" pos:end="96:33">1</literal></expr></argument>,<argument pos:start="96:35" pos:end="96:37"><expr pos:start="96:35" pos:end="96:37"><literal type="number" pos:start="96:35" pos:end="96:37">180</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="96:40" pos:end="96:45">break;</break>
		<case pos:start="97:17" pos:end="97:23">case <expr pos:start="97:22" pos:end="97:22"><literal type="number" pos:start="97:22" pos:end="97:22">4</literal></expr>:</case><expr_stmt pos:start="97:24" pos:end="97:39"><expr pos:start="97:24" pos:end="97:38"><call pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:29">goal_d</name><argument_list pos:start="97:30" pos:end="97:38">(<argument pos:start="97:31" pos:end="97:31"><expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr></argument>,<argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><literal type="number" pos:start="97:33" pos:end="97:33">1</literal></expr></argument>,<argument pos:start="97:35" pos:end="97:37"><expr pos:start="97:35" pos:end="97:37"><literal type="number" pos:start="97:35" pos:end="97:37">180</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="97:40" pos:end="97:45">break;</break>
		<case pos:start="98:17" pos:end="98:23">case <expr pos:start="98:22" pos:end="98:22"><literal type="number" pos:start="98:22" pos:end="98:22">5</literal></expr>:</case><expr_stmt pos:start="98:24" pos:end="98:39"><expr pos:start="98:24" pos:end="98:38"><call pos:start="98:24" pos:end="98:38"><name pos:start="98:24" pos:end="98:29">goal_d</name><argument_list pos:start="98:30" pos:end="98:38">(<argument pos:start="98:31" pos:end="98:31"><expr pos:start="98:31" pos:end="98:31"><literal type="number" pos:start="98:31" pos:end="98:31">0</literal></expr></argument>,<argument pos:start="98:33" pos:end="98:33"><expr pos:start="98:33" pos:end="98:33"><literal type="number" pos:start="98:33" pos:end="98:33">1</literal></expr></argument>,<argument pos:start="98:35" pos:end="98:37"><expr pos:start="98:35" pos:end="98:37"><literal type="number" pos:start="98:35" pos:end="98:37">270</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="98:40" pos:end="98:45">break;</break>
		<case pos:start="99:17" pos:end="99:23">case <expr pos:start="99:22" pos:end="99:22"><literal type="number" pos:start="99:22" pos:end="99:22">6</literal></expr>:</case><expr_stmt pos:start="99:24" pos:end="99:39"><expr pos:start="99:24" pos:end="99:38"><call pos:start="99:24" pos:end="99:38"><name pos:start="99:24" pos:end="99:29">goal_d</name><argument_list pos:start="99:30" pos:end="99:38">(<argument pos:start="99:31" pos:end="99:31"><expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">0</literal></expr></argument>,<argument pos:start="99:33" pos:end="99:33"><expr pos:start="99:33" pos:end="99:33"><literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr></argument>,<argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><literal type="number" pos:start="99:35" pos:end="99:37">270</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="99:40" pos:end="99:45">break;</break>
		<case pos:start="100:17" pos:end="100:23">case <expr pos:start="100:22" pos:end="100:22"><literal type="number" pos:start="100:22" pos:end="100:22">7</literal></expr>:</case><expr_stmt pos:start="100:24" pos:end="100:39"><expr pos:start="100:24" pos:end="100:38"><call pos:start="100:24" pos:end="100:38"><name pos:start="100:24" pos:end="100:29">goal_d</name><argument_list pos:start="100:30" pos:end="100:38">(<argument pos:start="100:31" pos:end="100:31"><expr pos:start="100:31" pos:end="100:31"><literal type="number" pos:start="100:31" pos:end="100:31">0</literal></expr></argument>,<argument pos:start="100:33" pos:end="100:33"><expr pos:start="100:33" pos:end="100:33"><literal type="number" pos:start="100:33" pos:end="100:33">0</literal></expr></argument>,<argument pos:start="100:35" pos:end="100:37"><expr pos:start="100:35" pos:end="100:37"><literal type="number" pos:start="100:35" pos:end="100:37">358</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="100:40" pos:end="100:45">break;</break>
		<default pos:start="101:17" pos:end="101:24">default:</default> <expr_stmt pos:start="101:26" pos:end="101:46"><expr pos:start="101:26" pos:end="101:45"><call pos:start="101:26" pos:end="101:45"><name pos:start="101:26" pos:end="101:33">ROS_INFO</name><argument_list pos:start="101:34" pos:end="101:45">(<argument pos:start="101:35" pos:end="101:44"><expr pos:start="101:35" pos:end="101:44"><literal type="string" pos:start="101:35" pos:end="101:44">"DEfaultt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content>}</block></switch>
		<expr_stmt pos:start="102:17" pos:end="102:37"><expr pos:start="102:17" pos:end="102:36"><name pos:start="102:17" pos:end="102:28"><name pos:start="102:17" pos:end="102:19">vel</name><operator pos:start="102:20" pos:end="102:20">.</operator><name pos:start="102:21" pos:end="102:26">linear</name><operator pos:start="102:27" pos:end="102:27">.</operator><name pos:start="102:28" pos:end="102:28">x</name></name> <operator pos:start="102:30" pos:end="102:30">=</operator> <name pos:start="102:32" pos:end="102:36">vel_x</name></expr>;</expr_stmt> <comment type="line" pos:start="102:39" pos:end="102:57">// set linear speed</comment>
		<expr_stmt pos:start="103:17" pos:end="103:38"><expr pos:start="103:17" pos:end="103:37"><name pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:19">vel</name><operator pos:start="103:20" pos:end="103:20">.</operator><name pos:start="103:21" pos:end="103:27">angular</name><operator pos:start="103:28" pos:end="103:28">.</operator><name pos:start="103:29" pos:end="103:29">z</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:37">ang_z</name></expr>;</expr_stmt> <comment type="line" pos:start="103:40" pos:end="103:59">// set angular speed</comment>

		
		<expr_stmt pos:start="106:17" pos:end="106:48"><expr pos:start="106:17" pos:end="106:47"><call pos:start="106:17" pos:end="106:47"><name pos:start="106:17" pos:end="106:42"><name pos:start="106:17" pos:end="106:34">velocity_publisher</name><operator pos:start="106:35" pos:end="106:35">.</operator><name pos:start="106:36" pos:end="106:42">publish</name></name><argument_list pos:start="106:43" pos:end="106:47">(<argument pos:start="106:44" pos:end="106:46"><expr pos:start="106:44" pos:end="106:46"><name pos:start="106:44" pos:end="106:46">vel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="106:50" pos:end="106:80">// Publish the command velocity</comment>
		<expr_stmt pos:start="107:17" pos:end="107:99"><expr pos:start="107:17" pos:end="107:98"><call pos:start="107:17" pos:end="107:98"><name pos:start="107:17" pos:end="107:25">ROS_DEBUG</name><argument_list pos:start="107:26" pos:end="107:98">(<argument pos:start="107:27" pos:end="107:68"><expr pos:start="107:27" pos:end="107:68"><literal type="string" pos:start="107:27" pos:end="107:68">"Main - Velocity commands: v - %f, w - %f"</literal></expr></argument>, <argument pos:start="107:71" pos:end="107:82"><expr pos:start="107:71" pos:end="107:82"><name pos:start="107:71" pos:end="107:82"><name pos:start="107:71" pos:end="107:73">vel</name><operator pos:start="107:74" pos:end="107:74">.</operator><name pos:start="107:75" pos:end="107:80">linear</name><operator pos:start="107:81" pos:end="107:81">.</operator><name pos:start="107:82" pos:end="107:82">x</name></name></expr></argument>, <argument pos:start="107:85" pos:end="107:97"><expr pos:start="107:85" pos:end="107:97"><name pos:start="107:85" pos:end="107:97"><name pos:start="107:85" pos:end="107:87">vel</name><operator pos:start="107:88" pos:end="107:88">.</operator><name pos:start="107:89" pos:end="107:95">angular</name><operator pos:start="107:96" pos:end="107:96">.</operator><name pos:start="107:97" pos:end="107:97">z</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
	</block_content>}</block></while>

	<return pos:start="111:9" pos:end="111:17">return <expr pos:start="111:16" pos:end="111:16"><literal type="number" pos:start="111:16" pos:end="111:16">0</literal></expr>;</return>
</block_content>}</block></function></unit>
